[push]
	default = matching
[core]
    autocrlf = input
[status]
    submoduleSummary = true
[alias]
    create = "!f(){\
        mkdir $1;\
        cd $1;\
        git init;\
        echo \"## $1\" > Readme.md;\
        git add Readme.md;\
        git commit -m \"Initial commit\";\
    }; f"
    sadd = submodule add
    sup = "!f(){ git submodule sync --recursive ; git submodule update --init --recursive; }; f"
    patch-commit = !bash -c 'diff -u <(git rev-list --first-parent "${1:-qa}") <(git rev-list --first-parent "${2:-master}") | sed -ne \"s/^ //p\" | head -1' -
    spull = !bash -c 'git submodule foreach "git checkout master; git pull origin master"' -
    current-branch = "!f(){ git branch | awk '{print $2}' | sed '/^\\s*$/d'; }; f" -
    branch-exists = rev-parse --verify
    c = checkout
    ign = "!f(){ echo \"$1\" >> .gitignore; }; f"
    up = "!f() { \
        git pull origin `git current-branch`; \
        git sup; \
    }; f"
    s = status
    rh = reset --hard
    st = stash
    stp = stash pop
    std = stash drop
    nuke = reset HEAD --hard
    k = !gitk --all
    a = add
    aa = add --all
    b = branch
    db = branch -d
    d = diff
    plog = log --oneline --graph --color --all --decorate
    cm = "!f(){ MSG=$1; shift; git commit -m \"sjanota: $MSG\" $@; }; f"
[pull]
	rebase = true
[http]
	postBuffer = 524288000
